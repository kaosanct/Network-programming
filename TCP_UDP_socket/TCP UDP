애플리케이션으로부터 전송할 데이터, 수신측의 IP 주소와 포트 번호를 전달받은 운영체제 내의 TCP/IP 소프트웨어는 다음과 같이 TCP 계층과 IP 계층으로 구성된다.

애플리케이션으로부터 전달받은 데이터와 수신측 정보는 우선 TCP 계층을 거쳐 IP 계층으로 전달된다.

TCP 계층은 TCP(Transmission Control Protocol)와 UDP(User Datagram Protocol) 프로토콜1) 두 개로 구분할 수 있는데, 신뢰성이 요구되는 애플리케이션에서는 TCP를 사용하고, 간단한 데이터를 빠른 속도로 전송하는 애플리케이션에서는 UDP를 사용한다.

TCP 계층에서 데이터가 전달되는 과정을 TCP를 사용하는 경우부터 자세히 살펴보면, TCP에서는 [그림 10-29]와 같이 송신측과 수신측의 연결이 이루어진 것을 확인한 다음에 데이터의 전송이 이루어진다.


그리고 TCP에서는 데이터가 제대로 전송되면 수신측으로부터 잘 받았다는 응답을 받게 되는데, 만약 응답을 받지 못하면 데이터를 재전송한다.


반면 UDP는 송신측과 수신측의 연결을 거치지 않고 일방적으로 데이터를 보내고, 데이터를 전송해도 수신측으로부터 응답은 따로 받지 않는다.


여기에서 수신측의 포트 번호는 애플리케이션에서 지정한 번호가 되고, 송신측의 포트 번호는 미사용 중인 포트 번호에서 임의로 골라 할당한다.

그리고 제어 비트에는 SYN, ACK 등의 제어 번호가 있는데, SYN 비트를 1로 하면 연결을 요청하는 것이고, ACK 비트를 1로 하면 ‘응’이라는 응답을 하는 것이다. [그림 10-33]을 통해 설명하면 SYN이 1이면 ‘통신할 수 있니?’라는 뜻이고, SYN과 ACK가 1이면 ‘응’이라는 응답을 뜻한다. 그리고 나서 ACK가 1이면 ‘그럼 통신을 시작하자’라는 의미가 된다.

UDP는 신뢰성을 보장하지는 않지만 간단하고 통신 속도가 빠르다는 장점이 있다. UDP를 사용하는 대표적인 애플리케이션으로 DNS(Domain Name System)가 있다.

https://terms.naver.com/entry.nhn?docId=2270477&cid=51173&categoryId=51173

또 TCP는 데이터 흐름을 제어한다.
데이터는 여러 패킷으로 조각 나서 이동한다.
패킷 통신은 네트워크를 효율적으로 이용, TCP는 패킷을 재 조립하고, 재전송을 요청하는 등 흐름을 제어한다.

데이터가 각 계층을 거치면서 커뮤니케이션할 프로토콜을 선택한다.
인터넷으로 나갈때까지 각 단계의 프로토콜 정보가 데이터에 덧붙여진다 ( Header)

<TCP/IP 4계층>
응용계층 userdata
전송계층 TCP Header + userdata
인터넷계층 IP Header + TCP Header + userdata
물리계층 Ethernet Header +IP Header + TCP Header + userdata

이렇게 인터넷으로 나간 데이터는 라우터에 의해 경로가 설정된다.
라우터는 패킷의 IP헤더정보를 읽어서, 목적지 주소를 알아내고 주변의 어떤 라우터로 보내야 할지를 결정한다.
이렇게 몇개의 라우터를 거쳐서 최종 목적지에 도달한다.
목적지에 도착한 데이터는 반대의 과정을 거쳐서 하나하나 벗으면서 웹서버까지 도착한다.
웹 서버는 HTTP 프로토콜 규격에 의거, 클라이언트의 요청을 확인하고 문서를 읽어서 데이터를 전송한다.


